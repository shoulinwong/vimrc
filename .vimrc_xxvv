"" command moving
cnoremap <C-A> <Home>
cnoremap <C-F> <Right>
cnoremap <C-B> <Left>
cnoremap <Esc>b <S-Left>
cnoremap <Esc>f <S-Right>

vmap > >gv
vmap < <gv
map Y y$

set nu
set rnu
set nocursorline

set cot=menu

" Remember info about open buffers on close
set viminfo^=%

map <leader>e :edit %:p:h<cr>

if has("patch-7.4.1500")
  set foldmethod=marker
endif
"set keywordprg=

if has('nvim')
  tnoremap <Esc> <C-\><C-n>
  tnoremap <A-h> <C-\><C-n><C-w>h
  tnoremap <A-j> <C-\><C-n><C-w>j
  tnoremap <A-k> <C-\><C-n><C-w>k
  tnoremap <A-l> <C-\><C-n><C-w>l

  if has('win32')
    map! <S-Insert> <C-R>+
    colorscheme molokai

    function! ToggleGuiWindowFullScreen()
      if g:GuiWindowFullScreen == 0
        call GuiWindowFullScreen(1)
      else
        call GuiWindowFullScreen(0)
      endif
    endfunction
    command! -nargs=0 ToggleFullScreen call ToggleGuiWindowFullScreen()
    nmap <F11> :ToggleFullScreen<CR>
  end

  if has('unix')
    if $TMUX != "" 
      let $TERM="screen-256color"
    else
      let $TERM="linux"
    endif

    map <leader>s :vs<cr>:term bash<cr>
    let g:python_host_prog='/usr/bin/python2'
    let g:python3_host_prog='/usr/bin/python3'
  endif

  set icm=split
else
  set t_Co=256
endif

" json format and json lint
if executable('jq')
  nmap <silent><leader>jq :%!jq --indent 2 .<cr>:w<cr>
  nmap <silent><leader>jc :%!jq -c .<cr>:w<cr>
  nmap <silent><leader>jf :%!jq --indent 2 -S .<cr>:w<cr>
  nmap <silent><leader>jr :%!jq -c -S .<cr>:w<cr>
  nmap <silent><leader>jl :!jq -c . % 1>/dev/null<cr>
  vmap <silent><leader>jl :'<,'>!jq -c . % 1>/dev/null<cr>
  vmap <silent><leader>jq :'<,'>!jq --indent 2 .<cr>:w<cr>
endif

if v:version >= 704
  function! Undo()
    if has('win32')
      let l:tmpdir=expand('$USERPROFILE/.vimundo')
    else
      let l:tmpdir=expand('~/.vimundo')
    endif

    if !isdirectory(l:tmpdir)
      call system('mkdir ' . l:tmpdir)
    endif

    let &undodir=l:tmpdir
    set undofile
    set undolevels=500 "maximum number of changes that can be undone
  endfunction

  call Undo()
endif

if has("cscope")
  " set csprg=/usr/local/bin/cscope
  set csto=0
  set cst
  set nocsverb
  " add any database in current directory
  if filereadable("cscope.out")
    cs add cscope.out
    " else add database pointed to by environment
  elseif $CSCOPE_DB != ""
    cs add $CSCOPE_DB
  endif
  set csverb

  map g<C-]> :cs find 1 <C-R>=expand("<cword>")<CR><CR>
  map g<C-\> :cs find 3 <C-R>=expand("<cword>")<CR><CR>

  nmap <C-_>s :cs find s <C-R>=expand("<cword>")<CR><CR>
  nmap <C-_>g :cs find g <C-R>=expand("<cword>")<CR><CR>
  nmap <C-_>c :cs find c <C-R>=expand("<cword>")<CR><CR>
  nmap <C-_>t :cs find t <C-R>=expand("<cword>")<CR><CR>
  nmap <C-_>e :cs find e <C-R>=expand("<cword>")<CR><CR>
  nmap <C-_>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
  nmap <C-_>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
  nmap <C-_>d :cs find d <C-R>=expand("<cword>")<CR><CR>
  nmap <C-_>a :cs find a <C-R>=expand("<cword>")<CR><CR>
endif

" vim: ts=2 sw=2 et
